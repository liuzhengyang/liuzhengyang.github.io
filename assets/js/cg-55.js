(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{488:function(e,s,r){"use strict";r.r(s);var i=r(34),t=Object(i.a)({},(function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"redis可靠性-持久化、主从同步、sentinel、集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis可靠性-持久化、主从同步、sentinel、集群"}},[e._v("#")]),e._v(" Redis可靠性（持久化、主从同步、sentinel、集群）")]),e._v(" "),r("p",[e._v("在实际使用redis时，我们需要考虑redis的可靠性。\n一个是服务可靠性一个是数据可靠性。\n比如如果redis机器故障，如何快速恢复、如何避免数据丢失，请求量数据量时，如何进行横向扩容？")]),e._v(" "),r("p",[e._v("这些redis官方以及开源社区都给出了很多解决方案。")]),e._v(" "),r("h2",{attrs:{id:"redis持久化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis持久化"}},[e._v("#")]),e._v(" redis持久化")]),e._v(" "),r("p",[e._v("我们都知道redis是内存数据库，它的数据存放在内存中，处理请求也是直接读写内存。\n那么如果机器重启或者进程被oom kill，redis重启后内存中的数据丢失了怎么办？")]),e._v(" "),r("p",[e._v("别担心，redis提供了内存数据持久化的机制，能够将内存中的数据「及时」保存到磁盘中。")]),e._v(" "),r("p",[e._v("redis提供了几种持久化选项")]),e._v(" "),r("ul",[r("li",[e._v("RDB(Redis Database): redis定期保存内存数据快照到磁盘中")]),e._v(" "),r("li",[e._v("AOF(Append Only File): AOF会把每次的修改操作保存到log文件中，重启时可以用类似mysql的binlog。")]),e._v(" "),r("li",[e._v("不持久化：不开启")]),e._v(" "),r("li",[e._v("RDB + AOF: 同时开启AOF和RDB")])]),e._v(" "),r("p",[e._v("RDB的实现方式是定期fork redis进程，利用copy-on-write的机制，在子进程中把数据保存到磁盘中，缺点是因为是定期执行，可能会丢失一部分数据。\nAOF会把修改操作保存到write buffer中，然后可以配置每次修改都fsync（不建议）或定期（比如一秒一次，推荐）fsync刷新到磁盘（还可以配置不fsync，利用linux自己的同步机制flush数据)，这样对于redis主线程保存log很快，fsync会在后台线程执行。\n这样redis极端情况也只会丢失最近没有fsync到磁盘的修改操作。")]),e._v(" "),r("p",[e._v("当AOF文件过大时，redis会对它进行压缩，这样能够减小文件大小、提高重启时的启动速度。\n比如连续对一个key incr调用100次，会产生100个修改日志数据，但是其实只需要保存最后的key的结果就可以了。")]),e._v(" "),r("h2",{attrs:{id:"redis主从同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis主从同步"}},[e._v("#")]),e._v(" redis主从同步")]),e._v(" "),r("p",[e._v("redis replication即redis复制是一种数据同步机制，类似于mysql的主从同步。\n通过将数据在不同机器间同步，能够在master节点故障（比如出现不可恢复的机器故障）时切换到从节点对外提供服务，\n也可以使用从节点处理读请求提升总体的读能力。")]),e._v(" "),r("p",[e._v("实现机制为")]),e._v(" "),r("ol",[r("li",[e._v("replica会连接到master, master持续向replica发送修改日志数据")]),e._v(" "),r("li",[e._v("连接因为网络等原因断开时，replica会重连")])]),e._v(" "),r("h2",{attrs:{id:"更多参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更多参考"}},[e._v("#")]),e._v(" 更多参考")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://redis.io/docs/management/persistence/",target:"_blank",rel:"noopener noreferrer"}},[e._v("redis persistence 官方文档"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=t.exports}}]);