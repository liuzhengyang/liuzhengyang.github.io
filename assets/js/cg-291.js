(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{723:function(a,e,r){"use strict";r.r(e);var l=r(34),s=Object(l.a)({},(function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"jemalloc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jemalloc"}},[a._v("#")]),a._v(" jemalloc")]),a._v(" "),r("p",[a._v("jemalloc是一个高性能的内存分配器。")]),a._v(" "),r("h2",{attrs:{id:"设计思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计思想"}},[a._v("#")]),a._v(" 设计思想")]),a._v(" "),r("ul",[r("li",[a._v("把小对象按照大小(size class)划分")]),a._v(" "),r("li",[a._v("精心选择size class，从而减少内部碎片")]),a._v(" "),r("li",[a._v("最小化锁竞争，通过thread local等方式减少锁同步；线程绑定到一个固定的arena上，减少线程间冲突。")])]),a._v(" "),r("h3",{attrs:{id:"size-class"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#size-class"}},[a._v("#")]),a._v(" size class")]),a._v(" "),r("ul",[r("li",[a._v("Small: [8], [16, 32, 48, ..., 128], [192, 256, 320, ..., 512]")]),a._v(" "),r("li",[a._v("Large: [4 KiB, 9KiB, 12KiB, ..., 4072KiB]")]),a._v(" "),r("li",[a._v("Huge: [4 MiB, 8 MiB, 12 MiB]")])]),a._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"img.png","data-src":"arena.png",loading:"lazy"}})]),a._v(" "),r("p",[a._v("jemalloc")]),a._v(" "),r("p",[a._v("arena: 多个内存区域，类似分配shard的设计，减少线程间的冲突。分配方式不是通过hash而是通过round-robin的方式为线程分配arena（这是因为\n实现一个很均匀分布的hash不是很容易）。减少冲突，从而也减少了cache line false cache sharing的问题。")]),a._v(" "),r("p",[a._v("thread cache: 线程本地缓存，减少arena的加锁冲突和开销")]),a._v(" "),r("h2",{attrs:{id:"resources"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[a._v("#")]),a._v(" Resources")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://people.freebsd.org/~jasone/jemalloc/bsdcan2006/jemalloc.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("A Scalable Concurrent malloc(3) Implementation for FreeBSD"),r("OutboundLink")],1)]),a._v(" "),r("li",[r("a",{attrs:{href:"https://www.facebook.com/notes/10158791475077200/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Scalable memory allocation using jemallo=c"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);