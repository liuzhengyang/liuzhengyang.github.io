(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{658:function(a,t,s){"use strict";s.r(t);var e=s(34),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"汇编基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编基础"}},[a._v("#")]),a._v(" 汇编基础")]),a._v(" "),s("h2",{attrs:{id:"寄存器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄存器"}},[a._v("#")]),a._v(" 寄存器")]),a._v(" "),s("p",[a._v("CS:IP段寄存器，保存段地址和偏移地址，通过这个寄存器来控制指令执行。")]),a._v(" "),s("h2",{attrs:{id:"指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[a._v("#")]),a._v(" 指令")]),a._v(" "),s("ul",[s("li",[a._v("push %a: 将一个寄存器的值压入到栈中，会自动更新栈顶指针（Stack Pointer）")]),a._v(" "),s("li",[a._v("pop %a: 从栈中弹出栈顶值到%a寄存器")]),a._v(" "),s("li",[a._v("mov %a, %b：把%b寄存器的值复制到%a寄存器")]),a._v(" "),s("li",[a._v("movl %a, %b: 把%a寄存器的值复制到%b寄存器")])]),a._v(" "),s("p",[a._v("函数")]),a._v(" "),s("p",[a._v("被调用函数负责保存调用函数的栈基地址（rbp）并分配新栈空间")]),a._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("pushl rbp\nmovl %esp, %ebp\nsubl$32, %esp\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("函数退出时通过"),s("code",[a._v("leave")]),a._v("指令恢复堆栈(恢复rbp和rsp)")]),a._v(" "),s("p",[a._v("函数调用，使用call指令，call指令会将当前的指令指针(IP)压入堆栈，并跳转到目标函数。\n被调用函数返回时，会使用ret指令，ret指令从堆栈中弹出之前保存的IP值到IP指令指针")])])}),[],!1,null,null,null);t.default=r.exports}}]);