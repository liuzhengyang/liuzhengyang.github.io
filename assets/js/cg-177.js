(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{607:function(s,a,n){"use strict";n.r(a);var t=n(34),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"枚举的支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举的支持"}},[s._v("#")]),s._v(" 枚举的支持")]),s._v(" "),n("h2",{attrs:{id:"枚举的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举的实现"}},[s._v("#")]),s._v(" 枚举的实现")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enum1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ITEM_1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ITEM_2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enum1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("javac编译后的结果")]),s._v(" "),n("p",[s._v("会给每个枚举生成一个对应的静态字段")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" public static final org.hotswap.agent.plugin.jvm.classinit.Enum1 ITEM_1;\n    descriptor: Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;\n    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n\n  public static final org.hotswap.agent.plugin.jvm.classinit.Enum1 ITEM_2;\n    descriptor: Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;\n    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("然后还会有一个名为$VALUES的枚举数组（javac叫这个名，eclipse的名字不同）")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("&lt;[Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("然后生成一个clinit方法即静态代码块，包含了为枚举值初始化以及放到$VALUES数组中的代码。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 创建对象\n 0 new #4 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1>\n 3 dup\n# 这个常量是枚举字段名\n 4 ldc #8 &lt;ITEM_1>\n 6 iconst_0\n 7 ldc #9 &lt;I1>\n# 调用构造函数\n 9 invokespecial #10 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.&lt;init> : (Ljava/lang/String;ILjava/lang/String;)V>\n# putstatic为枚举static字段赋值\n12 putstatic #11 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.ITEM_1 : Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n# 创建另一个枚举值\n15 new #4 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1>\n18 dup\n19 ldc #12 &lt;ITEM_2>\n21 iconst_1\n22 ldc #13 &lt;I2>\n24 invokespecial #10 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.&lt;init> : (Ljava/lang/String;ILjava/lang/String;)V>\n27 putstatic #14 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.ITEM_2 : Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n30 iconst_2\n# 创建$VALUES数组\n31 anewarray #4 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1>\n34 dup\n# 保存上面两个枚举到$VALUES数组中\n35 iconst_0\n36 getstatic #11 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.ITEM_1 : Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n39 aastore\n40 dup\n41 iconst_1\n42 getstatic #14 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.ITEM_2 : Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n45 aastore\n46 putstatic #1 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.$VALUES : [Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n49 return\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("生成的枚举的构造函数，参数会比java代码中的多两个，分别是枚举字段名和ordinal（顺序）")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# aload_0是this当前枚举对象\n 0 aload_0\n# aload_1获取的是参数里的枚举名\n 1 aload_1\n# iload_2是ordinal\n 2 iload_2\n# 调用java.lang.Enum即所有枚举的父类的构造函数，传入枚举字段名和ordinal\n 3 invokespecial #6 &lt;java/lang/Enum.&lt;init> : (Ljava/lang/String;I)V>\n# 这部分对应java代码中为枚举值的非静态字段赋值的部分\n 6 aload_0\n 7 aload_3\n 8 putfield #7 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.val : Ljava/lang/String;>\n11 return\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("我们在使用enum枚举时能使用的values方法，也是编译生成的，内容比较简单，把$VALUES数组clone返回即可。")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("0 getstatic #1 &lt;org/hotswap/agent/plugin/jvm/classinit/Enum1.$VALUES : [Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n3 invokevirtual #2 &lt;[Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;.clone : ()Ljava/lang/Object;>\n6 checkcast #3 &lt;[Lorg/hotswap/agent/plugin/jvm/classinit/Enum1;>\n9 areturn\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"枚举的更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举的更新"}},[s._v("#")]),s._v(" 枚举的更新")]),s._v(" "),n("h3",{attrs:{id:"新增枚举"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新增枚举"}},[s._v("#")]),s._v(" 新增枚举")]),s._v(" "),n("p",[s._v("通过前面的分析，新增枚举后，新的类编译后，javac会创建好对应的新字段，但是static代码块没有重新运行。")]),s._v(" "),n("p",[s._v("利用当前的class init plugin, class init plugin会创建一个$$ha$clinit静态方法。\n$$ha$clinit方法会执行对原有类中不存在的static字段的赋值操作")]),s._v(" "),n("h3",{attrs:{id:"修改枚举的非静态变量值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改枚举的非静态变量值"}},[s._v("#")]),s._v(" 修改枚举的非静态变量值")]),s._v(" "),n("p",[s._v('比如把 ITEM_1("I1") 改成 ITEM_1("I11")。\n由于枚举字段对象是在static代码块中运行的，而static代码块没有重新运行。\n所以需要重新执行全部的代码块。\n重新执行静态代码块后，会重新创建每个枚举值的对象，所以如果外部有持有对象的引用缓存，则在使用==或equals判断时\n会出现不符合预期的问题。')])])}),[],!1,null,null,null);a.default=e.exports}}]);