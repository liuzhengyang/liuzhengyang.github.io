(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{671:function(n,t,s){"use strict";s.r(t);var a=s(34),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"goroutine调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goroutine调度"}},[n._v("#")]),n._v(" goroutine调度")]),n._v(" "),s("p",[n._v("mstart1")]),n._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("func mstart1() {\n    // ...\n\tschedule()\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// One round of scheduler: find a runnable goroutine and execute it.\n// Never returns.\nfunc schedule() {\n\tmp := getg().m\n\n\tif mp.locks != 0 {\n\t\tthrow("schedule: holding locks")\n\t}\n\n\tif mp.lockedg != 0 {\n\t\tstoplockedm()\n\t\texecute(mp.lockedg.ptr(), false) // Never returns.\n\t}\n\n\t// We should not schedule away from a g that is executing a cgo call,\n\t// since the cgo call is using the m\'s g0 stack.\n\tif mp.incgo {\n\t\tthrow("schedule: in cgo")\n\t}\n\ntop:\n\tpp := mp.p.ptr()\n\tpp.preempt = false\n\n\t// Safety check: if we are spinning, the run queue should be empty.\n\t// Check this before calling checkTimers, as that might call\n\t// goready to put a ready goroutine on the local run queue.\n\tif mp.spinning &amp;&amp; (pp.runnext != 0 || pp.runqhead != pp.runqtail) {\n\t\tthrow("schedule: spinning with local work")\n\t}\n\n\tgp, inheritTime, tryWakeP := findRunnable() // blocks until work is available\n\n\tif debug.dontfreezetheworld > 0 &amp;&amp; freezing.Load() {\n\t\t// See comment in freezetheworld. We don\'t want to perturb\n\t\t// scheduler state, so we didn\'t gcstopm in findRunnable, but\n\t\t// also don\'t want to allow new goroutines to run.\n\t\t//\n\t\t// Deadlock here rather than in the findRunnable loop so if\n\t\t// findRunnable is stuck in a loop we don\'t perturb that\n\t\t// either.\n\t\tlock(&amp;deadlock)\n\t\tlock(&amp;deadlock)\n\t}\n\n\t// This thread is going to run a goroutine and is not spinning anymore,\n\t// so if it was marked as spinning we need to reset it now and potentially\n\t// start a new spinning M.\n\tif mp.spinning {\n\t\tresetspinning()\n\t}\n\n\tif sched.disable.user &amp;&amp; !schedEnabled(gp) {\n\t\t// Scheduling of this goroutine is disabled. Put it on\n\t\t// the list of pending runnable goroutines for when we\n\t\t// re-enable user scheduling and look again.\n\t\tlock(&amp;sched.lock)\n\t\tif schedEnabled(gp) {\n\t\t\t// Something re-enabled scheduling while we\n\t\t\t// were acquiring the lock.\n\t\t\tunlock(&amp;sched.lock)\n\t\t} else {\n\t\t\tsched.disable.runnable.pushBack(gp)\n\t\t\tsched.disable.n++\n\t\t\tunlock(&amp;sched.lock)\n\t\t\tgoto top\n\t\t}\n\t}\n\n\t// If about to schedule a not-normal goroutine (a GCworker or tracereader),\n\t// wake a P if there is one.\n\tif tryWakeP {\n\t\twakep()\n\t}\n\tif gp.lockedm != 0 {\n\t\t// Hands off own p to the locked m,\n\t\t// then blocks waiting for a new p.\n\t\tstartlockedm(gp)\n\t\tgoto top\n\t}\n\n\texecute(gp, inheritTime)\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br")])]),s("p",[n._v("findRunnable负责寻找可以运行的goroutine。")]),n._v(" "),s("ul",[s("li",[n._v("local queue")]),n._v(" "),s("li",[n._v("global queue")]),n._v(" "),s("li",[n._v("work steal")]),n._v(" "),s("li",[n._v("timer")]),n._v(" "),s("li",[n._v("network")]),n._v(" "),s("li",[n._v("spin")])]),n._v(" "),s("p",[n._v("如何解决signal丢失的问题，m在park之前，需要先设置spinning状态为false，然后再检查一遍队列。\n再sleep。")]),n._v(" "),s("ul",[s("li",[n._v("如果新任务是在设置spinning之前来的，那么再次检查能够发现新任务")]),n._v(" "),s("li",[n._v("如果新任务是在设置spinning之后来的，那么新任务会发现这个标识，unpark能保证当前m不会park阻塞，会直接唤醒。")])]),n._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// Finds a runnable goroutine to execute.\n// Tries to steal from other P\'s, get g from local or global queue, poll network.\n// tryWakeP indicates that the returned goroutine is not normal (GC worker, trace\n// reader) so the caller should try to wake a P.\nfunc findRunnable() (gp *g, inheritTime, tryWakeP bool) {\n\tmp := getg().m\n\n\t// The conditions here and in handoffp must agree: if\n\t// findrunnable would return a G to run, handoffp must start\n\t// an M.\n\ntop:\n\tpp := mp.p.ptr()\n\tif sched.gcwaiting.Load() {\n\t\tgcstopm()\n\t\tgoto top\n\t}\n\tif pp.runSafePointFn != 0 {\n\t\trunSafePointFn()\n\t}\n\n\t// now and pollUntil are saved for work stealing later,\n\t// which may steal timers. It\'s important that between now\n\t// and then, nothing blocks, so these numbers remain mostly\n\t// relevant.\n\tnow, pollUntil, _ := checkTimers(pp, 0)\n\n\t// Try to schedule the trace reader.\n\tif traceEnabled() || traceShuttingDown() {\n\t\tgp := traceReader()\n\t\tif gp != nil {\n\t\t\ttrace := traceAcquire()\n\t\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\t\tif trace.ok() {\n\t\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\t\ttraceRelease(trace)\n\t\t\t}\n\t\t\treturn gp, false, true\n\t\t}\n\t}\n\n\t// Try to schedule a GC worker.\n\tif gcBlackenEnabled != 0 {\n\t\tgp, tnow := gcController.findRunnableGCWorker(pp, now)\n\t\tif gp != nil {\n\t\t\treturn gp, false, true\n\t\t}\n\t\tnow = tnow\n\t}\n\n\t// Check the global runnable queue once in a while to ensure fairness.\n\t// Otherwise two goroutines can completely occupy the local runqueue\n\t// by constantly respawning each other.\n\tif pp.schedtick%61 == 0 &amp;&amp; sched.runqsize > 0 {\n\t\tlock(&amp;sched.lock)\n\t\tgp := globrunqget(pp, 1)\n\t\tunlock(&amp;sched.lock)\n\t\tif gp != nil {\n\t\t\treturn gp, false, false\n\t\t}\n\t}\n\n\t// Wake up the finalizer G.\n\tif fingStatus.Load()&amp;(fingWait|fingWake) == fingWait|fingWake {\n\t\tif gp := wakefing(); gp != nil {\n\t\t\tready(gp, 0, true)\n\t\t}\n\t}\n\tif *cgo_yield != nil {\n\t\tasmcgocall(*cgo_yield, nil)\n\t}\n\n\t// local runq\n\tif gp, inheritTime := runqget(pp); gp != nil {\n\t\treturn gp, inheritTime, false\n\t}\n\n\t// global runq\n\tif sched.runqsize != 0 {\n\t\tlock(&amp;sched.lock)\n\t\tgp := globrunqget(pp, 0)\n\t\tunlock(&amp;sched.lock)\n\t\tif gp != nil {\n\t\t\treturn gp, false, false\n\t\t}\n\t}\n\n\t// Poll network.\n\t// This netpoll is only an optimization before we resort to stealing.\n\t// We can safely skip it if there are no waiters or a thread is blocked\n\t// in netpoll already. If there is any kind of logical race with that\n\t// blocked thread (e.g. it has already returned from netpoll, but does\n\t// not set lastpoll yet), this thread will do blocking netpoll below\n\t// anyway.\n\tif netpollinited() &amp;&amp; netpollAnyWaiters() &amp;&amp; sched.lastpoll.Load() != 0 {\n\t\tif list, delta := netpoll(0); !list.empty() { // non-blocking\n\t\t\tgp := list.pop()\n\t\t\tinjectglist(&amp;list)\n\t\t\tnetpollAdjustWaiters(delta)\n\t\t\ttrace := traceAcquire()\n\t\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\t\tif trace.ok() {\n\t\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\t\ttraceRelease(trace)\n\t\t\t}\n\t\t\treturn gp, false, false\n\t\t}\n\t}\n\n\t// Spinning Ms: steal work from other Ps.\n\t//\n\t// Limit the number of spinning Ms to half the number of busy Ps.\n\t// This is necessary to prevent excessive CPU consumption when\n\t// GOMAXPROCS>>1 but the program parallelism is low.\n\tif mp.spinning || 2*sched.nmspinning.Load() &lt; gomaxprocs-sched.npidle.Load() {\n\t\tif !mp.spinning {\n\t\t\tmp.becomeSpinning()\n\t\t}\n\n\t\tgp, inheritTime, tnow, w, newWork := stealWork(now)\n\t\tif gp != nil {\n\t\t\t// Successfully stole.\n\t\t\treturn gp, inheritTime, false\n\t\t}\n\t\tif newWork {\n\t\t\t// There may be new timer or GC work; restart to\n\t\t\t// discover.\n\t\t\tgoto top\n\t\t}\n\n\t\tnow = tnow\n\t\tif w != 0 &amp;&amp; (pollUntil == 0 || w &lt; pollUntil) {\n\t\t\t// Earlier timer to wait for.\n\t\t\tpollUntil = w\n\t\t}\n\t}\n\n\t// We have nothing to do.\n\t//\n\t// If we\'re in the GC mark phase, can safely scan and blacken objects,\n\t// and have work to do, run idle-time marking rather than give up the P.\n\tif gcBlackenEnabled != 0 &amp;&amp; gcMarkWorkAvailable(pp) &amp;&amp; gcController.addIdleMarkWorker() {\n\t\tnode := (*gcBgMarkWorkerNode)(gcBgMarkWorkerPool.pop())\n\t\tif node != nil {\n\t\t\tpp.gcMarkWorkerMode = gcMarkWorkerIdleMode\n\t\t\tgp := node.gp.ptr()\n\n\t\t\ttrace := traceAcquire()\n\t\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\t\tif trace.ok() {\n\t\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\t\ttraceRelease(trace)\n\t\t\t}\n\t\t\treturn gp, false, false\n\t\t}\n\t\tgcController.removeIdleMarkWorker()\n\t}\n\n\t// wasm only:\n\t// If a callback returned and no other goroutine is awake,\n\t// then wake event handler goroutine which pauses execution\n\t// until a callback was triggered.\n\tgp, otherReady := beforeIdle(now, pollUntil)\n\tif gp != nil {\n\t\ttrace := traceAcquire()\n\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\tif trace.ok() {\n\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\ttraceRelease(trace)\n\t\t}\n\t\treturn gp, false, false\n\t}\n\tif otherReady {\n\t\tgoto top\n\t}\n\n\t// Before we drop our P, make a snapshot of the allp slice,\n\t// which can change underfoot once we no longer block\n\t// safe-points. We don\'t need to snapshot the contents because\n\t// everything up to cap(allp) is immutable.\n\tallpSnapshot := allp\n\t// Also snapshot masks. Value changes are OK, but we can\'t allow\n\t// len to change out from under us.\n\tidlepMaskSnapshot := idlepMask\n\ttimerpMaskSnapshot := timerpMask\n\n\t// return P and block\n\tlock(&amp;sched.lock)\n\tif sched.gcwaiting.Load() || pp.runSafePointFn != 0 {\n\t\tunlock(&amp;sched.lock)\n\t\tgoto top\n\t}\n\tif sched.runqsize != 0 {\n\t\tgp := globrunqget(pp, 0)\n\t\tunlock(&amp;sched.lock)\n\t\treturn gp, false, false\n\t}\n\tif !mp.spinning &amp;&amp; sched.needspinning.Load() == 1 {\n\t\t// See "Delicate dance" comment below.\n\t\tmp.becomeSpinning()\n\t\tunlock(&amp;sched.lock)\n\t\tgoto top\n\t}\n\tif releasep() != pp {\n\t\tthrow("findrunnable: wrong p")\n\t}\n\tnow = pidleput(pp, now)\n\tunlock(&amp;sched.lock)\n\n\t// Delicate dance: thread transitions from spinning to non-spinning\n\t// state, potentially concurrently with submission of new work. We must\n\t// drop nmspinning first and then check all sources again (with\n\t// #StoreLoad memory barrier in between). If we do it the other way\n\t// around, another thread can submit work after we\'ve checked all\n\t// sources but before we drop nmspinning; as a result nobody will\n\t// unpark a thread to run the work.\n\t//\n\t// This applies to the following sources of work:\n\t//\n\t// * Goroutines added to the global or a per-P run queue.\n\t// * New/modified-earlier timers on a per-P timer heap.\n\t// * Idle-priority GC work (barring golang.org/issue/19112).\n\t//\n\t// If we discover new work below, we need to restore m.spinning as a\n\t// signal for resetspinning to unpark a new worker thread (because\n\t// there can be more than one starving goroutine).\n\t//\n\t// However, if after discovering new work we also observe no idle Ps\n\t// (either here or in resetspinning), we have a problem. We may be\n\t// racing with a non-spinning M in the block above, having found no\n\t// work and preparing to release its P and park. Allowing that P to go\n\t// idle will result in loss of work conservation (idle P while there is\n\t// runnable work). This could result in complete deadlock in the\n\t// unlikely event that we discover new work (from netpoll) right as we\n\t// are racing with _all_ other Ps going idle.\n\t//\n\t// We use sched.needspinning to synchronize with non-spinning Ms going\n\t// idle. If needspinning is set when they are about to drop their P,\n\t// they abort the drop and instead become a new spinning M on our\n\t// behalf. If we are not racing and the system is truly fully loaded\n\t// then no spinning threads are required, and the next thread to\n\t// naturally become spinning will clear the flag.\n\t//\n\t// Also see "Worker thread parking/unparking" comment at the top of the\n\t// file.\n\twasSpinning := mp.spinning\n\tif mp.spinning {\n\t\tmp.spinning = false\n\t\tif sched.nmspinning.Add(-1) &lt; 0 {\n\t\t\tthrow("findrunnable: negative nmspinning")\n\t\t}\n\n\t\t// Note the for correctness, only the last M transitioning from\n\t\t// spinning to non-spinning must perform these rechecks to\n\t\t// ensure no missed work. However, the runtime has some cases\n\t\t// of transient increments of nmspinning that are decremented\n\t\t// without going through this path, so we must be conservative\n\t\t// and perform the check on all spinning Ms.\n\t\t//\n\t\t// See https://go.dev/issue/43997.\n\n\t\t// Check global and P runqueues again.\n\n\t\tlock(&amp;sched.lock)\n\t\tif sched.runqsize != 0 {\n\t\t\tpp, _ := pidlegetSpinning(0)\n\t\t\tif pp != nil {\n\t\t\t\tgp := globrunqget(pp, 0)\n\t\t\t\tif gp == nil {\n\t\t\t\t\tthrow("global runq empty with non-zero runqsize")\n\t\t\t\t}\n\t\t\t\tunlock(&amp;sched.lock)\n\t\t\t\tacquirep(pp)\n\t\t\t\tmp.becomeSpinning()\n\t\t\t\treturn gp, false, false\n\t\t\t}\n\t\t}\n\t\tunlock(&amp;sched.lock)\n\n\t\tpp := checkRunqsNoP(allpSnapshot, idlepMaskSnapshot)\n\t\tif pp != nil {\n\t\t\tacquirep(pp)\n\t\t\tmp.becomeSpinning()\n\t\t\tgoto top\n\t\t}\n\n\t\t// Check for idle-priority GC work again.\n\t\tpp, gp := checkIdleGCNoP()\n\t\tif pp != nil {\n\t\t\tacquirep(pp)\n\t\t\tmp.becomeSpinning()\n\n\t\t\t// Run the idle worker.\n\t\t\tpp.gcMarkWorkerMode = gcMarkWorkerIdleMode\n\t\t\ttrace := traceAcquire()\n\t\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\t\tif trace.ok() {\n\t\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\t\ttraceRelease(trace)\n\t\t\t}\n\t\t\treturn gp, false, false\n\t\t}\n\n\t\t// Finally, check for timer creation or expiry concurrently with\n\t\t// transitioning from spinning to non-spinning.\n\t\t//\n\t\t// Note that we cannot use checkTimers here because it calls\n\t\t// adjusttimers which may need to allocate memory, and that isn\'t\n\t\t// allowed when we don\'t have an active P.\n\t\tpollUntil = checkTimersNoP(allpSnapshot, timerpMaskSnapshot, pollUntil)\n\t}\n\n\t// Poll network until next timer.\n\tif netpollinited() &amp;&amp; (netpollAnyWaiters() || pollUntil != 0) &amp;&amp; sched.lastpoll.Swap(0) != 0 {\n\t\tsched.pollUntil.Store(pollUntil)\n\t\tif mp.p != 0 {\n\t\t\tthrow("findrunnable: netpoll with p")\n\t\t}\n\t\tif mp.spinning {\n\t\t\tthrow("findrunnable: netpoll with spinning")\n\t\t}\n\t\tdelay := int64(-1)\n\t\tif pollUntil != 0 {\n\t\t\tif now == 0 {\n\t\t\t\tnow = nanotime()\n\t\t\t}\n\t\t\tdelay = pollUntil - now\n\t\t\tif delay &lt; 0 {\n\t\t\t\tdelay = 0\n\t\t\t}\n\t\t}\n\t\tif faketime != 0 {\n\t\t\t// When using fake time, just poll.\n\t\t\tdelay = 0\n\t\t}\n\t\tlist, delta := netpoll(delay) // block until new work is available\n\t\t// Refresh now again, after potentially blocking.\n\t\tnow = nanotime()\n\t\tsched.pollUntil.Store(0)\n\t\tsched.lastpoll.Store(now)\n\t\tif faketime != 0 &amp;&amp; list.empty() {\n\t\t\t// Using fake time and nothing is ready; stop M.\n\t\t\t// When all M\'s stop, checkdead will call timejump.\n\t\t\tstopm()\n\t\t\tgoto top\n\t\t}\n\t\tlock(&amp;sched.lock)\n\t\tpp, _ := pidleget(now)\n\t\tunlock(&amp;sched.lock)\n\t\tif pp == nil {\n\t\t\tinjectglist(&amp;list)\n\t\t\tnetpollAdjustWaiters(delta)\n\t\t} else {\n\t\t\tacquirep(pp)\n\t\t\tif !list.empty() {\n\t\t\t\tgp := list.pop()\n\t\t\t\tinjectglist(&amp;list)\n\t\t\t\tnetpollAdjustWaiters(delta)\n\t\t\t\ttrace := traceAcquire()\n\t\t\t\tcasgstatus(gp, _Gwaiting, _Grunnable)\n\t\t\t\tif trace.ok() {\n\t\t\t\t\ttrace.GoUnpark(gp, 0)\n\t\t\t\t\ttraceRelease(trace)\n\t\t\t\t}\n\t\t\t\treturn gp, false, false\n\t\t\t}\n\t\t\tif wasSpinning {\n\t\t\t\tmp.becomeSpinning()\n\t\t\t}\n\t\t\tgoto top\n\t\t}\n\t} else if pollUntil != 0 &amp;&amp; netpollinited() {\n\t\tpollerPollUntil := sched.pollUntil.Load()\n\t\tif pollerPollUntil == 0 || pollerPollUntil > pollUntil {\n\t\t\tnetpollBreak()\n\t\t}\n\t}\n\tstopm()\n\tgoto top\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br"),s("span",{staticClass:"line-number"},[n._v("142")]),s("br"),s("span",{staticClass:"line-number"},[n._v("143")]),s("br"),s("span",{staticClass:"line-number"},[n._v("144")]),s("br"),s("span",{staticClass:"line-number"},[n._v("145")]),s("br"),s("span",{staticClass:"line-number"},[n._v("146")]),s("br"),s("span",{staticClass:"line-number"},[n._v("147")]),s("br"),s("span",{staticClass:"line-number"},[n._v("148")]),s("br"),s("span",{staticClass:"line-number"},[n._v("149")]),s("br"),s("span",{staticClass:"line-number"},[n._v("150")]),s("br"),s("span",{staticClass:"line-number"},[n._v("151")]),s("br"),s("span",{staticClass:"line-number"},[n._v("152")]),s("br"),s("span",{staticClass:"line-number"},[n._v("153")]),s("br"),s("span",{staticClass:"line-number"},[n._v("154")]),s("br"),s("span",{staticClass:"line-number"},[n._v("155")]),s("br"),s("span",{staticClass:"line-number"},[n._v("156")]),s("br"),s("span",{staticClass:"line-number"},[n._v("157")]),s("br"),s("span",{staticClass:"line-number"},[n._v("158")]),s("br"),s("span",{staticClass:"line-number"},[n._v("159")]),s("br"),s("span",{staticClass:"line-number"},[n._v("160")]),s("br"),s("span",{staticClass:"line-number"},[n._v("161")]),s("br"),s("span",{staticClass:"line-number"},[n._v("162")]),s("br"),s("span",{staticClass:"line-number"},[n._v("163")]),s("br"),s("span",{staticClass:"line-number"},[n._v("164")]),s("br"),s("span",{staticClass:"line-number"},[n._v("165")]),s("br"),s("span",{staticClass:"line-number"},[n._v("166")]),s("br"),s("span",{staticClass:"line-number"},[n._v("167")]),s("br"),s("span",{staticClass:"line-number"},[n._v("168")]),s("br"),s("span",{staticClass:"line-number"},[n._v("169")]),s("br"),s("span",{staticClass:"line-number"},[n._v("170")]),s("br"),s("span",{staticClass:"line-number"},[n._v("171")]),s("br"),s("span",{staticClass:"line-number"},[n._v("172")]),s("br"),s("span",{staticClass:"line-number"},[n._v("173")]),s("br"),s("span",{staticClass:"line-number"},[n._v("174")]),s("br"),s("span",{staticClass:"line-number"},[n._v("175")]),s("br"),s("span",{staticClass:"line-number"},[n._v("176")]),s("br"),s("span",{staticClass:"line-number"},[n._v("177")]),s("br"),s("span",{staticClass:"line-number"},[n._v("178")]),s("br"),s("span",{staticClass:"line-number"},[n._v("179")]),s("br"),s("span",{staticClass:"line-number"},[n._v("180")]),s("br"),s("span",{staticClass:"line-number"},[n._v("181")]),s("br"),s("span",{staticClass:"line-number"},[n._v("182")]),s("br"),s("span",{staticClass:"line-number"},[n._v("183")]),s("br"),s("span",{staticClass:"line-number"},[n._v("184")]),s("br"),s("span",{staticClass:"line-number"},[n._v("185")]),s("br"),s("span",{staticClass:"line-number"},[n._v("186")]),s("br"),s("span",{staticClass:"line-number"},[n._v("187")]),s("br"),s("span",{staticClass:"line-number"},[n._v("188")]),s("br"),s("span",{staticClass:"line-number"},[n._v("189")]),s("br"),s("span",{staticClass:"line-number"},[n._v("190")]),s("br"),s("span",{staticClass:"line-number"},[n._v("191")]),s("br"),s("span",{staticClass:"line-number"},[n._v("192")]),s("br"),s("span",{staticClass:"line-number"},[n._v("193")]),s("br"),s("span",{staticClass:"line-number"},[n._v("194")]),s("br"),s("span",{staticClass:"line-number"},[n._v("195")]),s("br"),s("span",{staticClass:"line-number"},[n._v("196")]),s("br"),s("span",{staticClass:"line-number"},[n._v("197")]),s("br"),s("span",{staticClass:"line-number"},[n._v("198")]),s("br"),s("span",{staticClass:"line-number"},[n._v("199")]),s("br"),s("span",{staticClass:"line-number"},[n._v("200")]),s("br"),s("span",{staticClass:"line-number"},[n._v("201")]),s("br"),s("span",{staticClass:"line-number"},[n._v("202")]),s("br"),s("span",{staticClass:"line-number"},[n._v("203")]),s("br"),s("span",{staticClass:"line-number"},[n._v("204")]),s("br"),s("span",{staticClass:"line-number"},[n._v("205")]),s("br"),s("span",{staticClass:"line-number"},[n._v("206")]),s("br"),s("span",{staticClass:"line-number"},[n._v("207")]),s("br"),s("span",{staticClass:"line-number"},[n._v("208")]),s("br"),s("span",{staticClass:"line-number"},[n._v("209")]),s("br"),s("span",{staticClass:"line-number"},[n._v("210")]),s("br"),s("span",{staticClass:"line-number"},[n._v("211")]),s("br"),s("span",{staticClass:"line-number"},[n._v("212")]),s("br"),s("span",{staticClass:"line-number"},[n._v("213")]),s("br"),s("span",{staticClass:"line-number"},[n._v("214")]),s("br"),s("span",{staticClass:"line-number"},[n._v("215")]),s("br"),s("span",{staticClass:"line-number"},[n._v("216")]),s("br"),s("span",{staticClass:"line-number"},[n._v("217")]),s("br"),s("span",{staticClass:"line-number"},[n._v("218")]),s("br"),s("span",{staticClass:"line-number"},[n._v("219")]),s("br"),s("span",{staticClass:"line-number"},[n._v("220")]),s("br"),s("span",{staticClass:"line-number"},[n._v("221")]),s("br"),s("span",{staticClass:"line-number"},[n._v("222")]),s("br"),s("span",{staticClass:"line-number"},[n._v("223")]),s("br"),s("span",{staticClass:"line-number"},[n._v("224")]),s("br"),s("span",{staticClass:"line-number"},[n._v("225")]),s("br"),s("span",{staticClass:"line-number"},[n._v("226")]),s("br"),s("span",{staticClass:"line-number"},[n._v("227")]),s("br"),s("span",{staticClass:"line-number"},[n._v("228")]),s("br"),s("span",{staticClass:"line-number"},[n._v("229")]),s("br"),s("span",{staticClass:"line-number"},[n._v("230")]),s("br"),s("span",{staticClass:"line-number"},[n._v("231")]),s("br"),s("span",{staticClass:"line-number"},[n._v("232")]),s("br"),s("span",{staticClass:"line-number"},[n._v("233")]),s("br"),s("span",{staticClass:"line-number"},[n._v("234")]),s("br"),s("span",{staticClass:"line-number"},[n._v("235")]),s("br"),s("span",{staticClass:"line-number"},[n._v("236")]),s("br"),s("span",{staticClass:"line-number"},[n._v("237")]),s("br"),s("span",{staticClass:"line-number"},[n._v("238")]),s("br"),s("span",{staticClass:"line-number"},[n._v("239")]),s("br"),s("span",{staticClass:"line-number"},[n._v("240")]),s("br"),s("span",{staticClass:"line-number"},[n._v("241")]),s("br"),s("span",{staticClass:"line-number"},[n._v("242")]),s("br"),s("span",{staticClass:"line-number"},[n._v("243")]),s("br"),s("span",{staticClass:"line-number"},[n._v("244")]),s("br"),s("span",{staticClass:"line-number"},[n._v("245")]),s("br"),s("span",{staticClass:"line-number"},[n._v("246")]),s("br"),s("span",{staticClass:"line-number"},[n._v("247")]),s("br"),s("span",{staticClass:"line-number"},[n._v("248")]),s("br"),s("span",{staticClass:"line-number"},[n._v("249")]),s("br"),s("span",{staticClass:"line-number"},[n._v("250")]),s("br"),s("span",{staticClass:"line-number"},[n._v("251")]),s("br"),s("span",{staticClass:"line-number"},[n._v("252")]),s("br"),s("span",{staticClass:"line-number"},[n._v("253")]),s("br"),s("span",{staticClass:"line-number"},[n._v("254")]),s("br"),s("span",{staticClass:"line-number"},[n._v("255")]),s("br"),s("span",{staticClass:"line-number"},[n._v("256")]),s("br"),s("span",{staticClass:"line-number"},[n._v("257")]),s("br"),s("span",{staticClass:"line-number"},[n._v("258")]),s("br"),s("span",{staticClass:"line-number"},[n._v("259")]),s("br"),s("span",{staticClass:"line-number"},[n._v("260")]),s("br"),s("span",{staticClass:"line-number"},[n._v("261")]),s("br"),s("span",{staticClass:"line-number"},[n._v("262")]),s("br"),s("span",{staticClass:"line-number"},[n._v("263")]),s("br"),s("span",{staticClass:"line-number"},[n._v("264")]),s("br"),s("span",{staticClass:"line-number"},[n._v("265")]),s("br"),s("span",{staticClass:"line-number"},[n._v("266")]),s("br"),s("span",{staticClass:"line-number"},[n._v("267")]),s("br"),s("span",{staticClass:"line-number"},[n._v("268")]),s("br"),s("span",{staticClass:"line-number"},[n._v("269")]),s("br"),s("span",{staticClass:"line-number"},[n._v("270")]),s("br"),s("span",{staticClass:"line-number"},[n._v("271")]),s("br"),s("span",{staticClass:"line-number"},[n._v("272")]),s("br"),s("span",{staticClass:"line-number"},[n._v("273")]),s("br"),s("span",{staticClass:"line-number"},[n._v("274")]),s("br"),s("span",{staticClass:"line-number"},[n._v("275")]),s("br"),s("span",{staticClass:"line-number"},[n._v("276")]),s("br"),s("span",{staticClass:"line-number"},[n._v("277")]),s("br"),s("span",{staticClass:"line-number"},[n._v("278")]),s("br"),s("span",{staticClass:"line-number"},[n._v("279")]),s("br"),s("span",{staticClass:"line-number"},[n._v("280")]),s("br"),s("span",{staticClass:"line-number"},[n._v("281")]),s("br"),s("span",{staticClass:"line-number"},[n._v("282")]),s("br"),s("span",{staticClass:"line-number"},[n._v("283")]),s("br"),s("span",{staticClass:"line-number"},[n._v("284")]),s("br"),s("span",{staticClass:"line-number"},[n._v("285")]),s("br"),s("span",{staticClass:"line-number"},[n._v("286")]),s("br"),s("span",{staticClass:"line-number"},[n._v("287")]),s("br"),s("span",{staticClass:"line-number"},[n._v("288")]),s("br"),s("span",{staticClass:"line-number"},[n._v("289")]),s("br"),s("span",{staticClass:"line-number"},[n._v("290")]),s("br"),s("span",{staticClass:"line-number"},[n._v("291")]),s("br"),s("span",{staticClass:"line-number"},[n._v("292")]),s("br"),s("span",{staticClass:"line-number"},[n._v("293")]),s("br"),s("span",{staticClass:"line-number"},[n._v("294")]),s("br"),s("span",{staticClass:"line-number"},[n._v("295")]),s("br"),s("span",{staticClass:"line-number"},[n._v("296")]),s("br"),s("span",{staticClass:"line-number"},[n._v("297")]),s("br"),s("span",{staticClass:"line-number"},[n._v("298")]),s("br"),s("span",{staticClass:"line-number"},[n._v("299")]),s("br"),s("span",{staticClass:"line-number"},[n._v("300")]),s("br"),s("span",{staticClass:"line-number"},[n._v("301")]),s("br"),s("span",{staticClass:"line-number"},[n._v("302")]),s("br"),s("span",{staticClass:"line-number"},[n._v("303")]),s("br"),s("span",{staticClass:"line-number"},[n._v("304")]),s("br"),s("span",{staticClass:"line-number"},[n._v("305")]),s("br"),s("span",{staticClass:"line-number"},[n._v("306")]),s("br"),s("span",{staticClass:"line-number"},[n._v("307")]),s("br"),s("span",{staticClass:"line-number"},[n._v("308")]),s("br"),s("span",{staticClass:"line-number"},[n._v("309")]),s("br"),s("span",{staticClass:"line-number"},[n._v("310")]),s("br"),s("span",{staticClass:"line-number"},[n._v("311")]),s("br"),s("span",{staticClass:"line-number"},[n._v("312")]),s("br"),s("span",{staticClass:"line-number"},[n._v("313")]),s("br"),s("span",{staticClass:"line-number"},[n._v("314")]),s("br"),s("span",{staticClass:"line-number"},[n._v("315")]),s("br"),s("span",{staticClass:"line-number"},[n._v("316")]),s("br"),s("span",{staticClass:"line-number"},[n._v("317")]),s("br"),s("span",{staticClass:"line-number"},[n._v("318")]),s("br"),s("span",{staticClass:"line-number"},[n._v("319")]),s("br"),s("span",{staticClass:"line-number"},[n._v("320")]),s("br"),s("span",{staticClass:"line-number"},[n._v("321")]),s("br"),s("span",{staticClass:"line-number"},[n._v("322")]),s("br"),s("span",{staticClass:"line-number"},[n._v("323")]),s("br"),s("span",{staticClass:"line-number"},[n._v("324")]),s("br"),s("span",{staticClass:"line-number"},[n._v("325")]),s("br"),s("span",{staticClass:"line-number"},[n._v("326")]),s("br"),s("span",{staticClass:"line-number"},[n._v("327")]),s("br"),s("span",{staticClass:"line-number"},[n._v("328")]),s("br"),s("span",{staticClass:"line-number"},[n._v("329")]),s("br"),s("span",{staticClass:"line-number"},[n._v("330")]),s("br"),s("span",{staticClass:"line-number"},[n._v("331")]),s("br"),s("span",{staticClass:"line-number"},[n._v("332")]),s("br"),s("span",{staticClass:"line-number"},[n._v("333")]),s("br"),s("span",{staticClass:"line-number"},[n._v("334")]),s("br"),s("span",{staticClass:"line-number"},[n._v("335")]),s("br"),s("span",{staticClass:"line-number"},[n._v("336")]),s("br"),s("span",{staticClass:"line-number"},[n._v("337")]),s("br"),s("span",{staticClass:"line-number"},[n._v("338")]),s("br"),s("span",{staticClass:"line-number"},[n._v("339")]),s("br"),s("span",{staticClass:"line-number"},[n._v("340")]),s("br"),s("span",{staticClass:"line-number"},[n._v("341")]),s("br"),s("span",{staticClass:"line-number"},[n._v("342")]),s("br"),s("span",{staticClass:"line-number"},[n._v("343")]),s("br"),s("span",{staticClass:"line-number"},[n._v("344")]),s("br"),s("span",{staticClass:"line-number"},[n._v("345")]),s("br"),s("span",{staticClass:"line-number"},[n._v("346")]),s("br"),s("span",{staticClass:"line-number"},[n._v("347")]),s("br"),s("span",{staticClass:"line-number"},[n._v("348")]),s("br"),s("span",{staticClass:"line-number"},[n._v("349")]),s("br"),s("span",{staticClass:"line-number"},[n._v("350")]),s("br"),s("span",{staticClass:"line-number"},[n._v("351")]),s("br"),s("span",{staticClass:"line-number"},[n._v("352")]),s("br"),s("span",{staticClass:"line-number"},[n._v("353")]),s("br"),s("span",{staticClass:"line-number"},[n._v("354")]),s("br"),s("span",{staticClass:"line-number"},[n._v("355")]),s("br"),s("span",{staticClass:"line-number"},[n._v("356")]),s("br"),s("span",{staticClass:"line-number"},[n._v("357")]),s("br"),s("span",{staticClass:"line-number"},[n._v("358")]),s("br"),s("span",{staticClass:"line-number"},[n._v("359")]),s("br"),s("span",{staticClass:"line-number"},[n._v("360")]),s("br"),s("span",{staticClass:"line-number"},[n._v("361")]),s("br"),s("span",{staticClass:"line-number"},[n._v("362")]),s("br"),s("span",{staticClass:"line-number"},[n._v("363")]),s("br"),s("span",{staticClass:"line-number"},[n._v("364")]),s("br"),s("span",{staticClass:"line-number"},[n._v("365")]),s("br"),s("span",{staticClass:"line-number"},[n._v("366")]),s("br"),s("span",{staticClass:"line-number"},[n._v("367")]),s("br"),s("span",{staticClass:"line-number"},[n._v("368")]),s("br"),s("span",{staticClass:"line-number"},[n._v("369")]),s("br"),s("span",{staticClass:"line-number"},[n._v("370")]),s("br"),s("span",{staticClass:"line-number"},[n._v("371")]),s("br"),s("span",{staticClass:"line-number"},[n._v("372")]),s("br"),s("span",{staticClass:"line-number"},[n._v("373")]),s("br"),s("span",{staticClass:"line-number"},[n._v("374")]),s("br"),s("span",{staticClass:"line-number"},[n._v("375")]),s("br"),s("span",{staticClass:"line-number"},[n._v("376")]),s("br"),s("span",{staticClass:"line-number"},[n._v("377")]),s("br"),s("span",{staticClass:"line-number"},[n._v("378")]),s("br"),s("span",{staticClass:"line-number"},[n._v("379")]),s("br"),s("span",{staticClass:"line-number"},[n._v("380")]),s("br")])]),s("p",[n._v("唤醒流程")]),n._v(" "),s("ul",[s("li",[n._v("_Pidle：也是一个栈式结构，通过sched.pidle形成栈。wake时出栈、park时入栈。")])]),n._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// Tries to add one more P to execute G\'s.\n// Called when a G is made runnable (newproc, ready).\n// Must be called with a P.\nfunc wakep() {\n\t// Be conservative about spinning threads, only start one if none exist\n\t// already.\n\tif sched.nmspinning.Load() != 0 || !sched.nmspinning.CompareAndSwap(0, 1) {\n\t\treturn\n\t}\n\n\t// Disable preemption until ownership of pp transfers to the next M in\n\t// startm. Otherwise preemption here would leave pp stuck waiting to\n\t// enter _Pgcstop.\n\t//\n\t// See preemption comment on acquirem in startm for more details.\n\tmp := acquirem()\n\n\tvar pp *p\n\tlock(&amp;sched.lock)\n\tpp, _ = pidlegetSpinning(0)\n\tif pp == nil {\n\t\tif sched.nmspinning.Add(-1) &lt; 0 {\n\t\t\tthrow("wakep: negative nmspinning")\n\t\t}\n\t\tunlock(&amp;sched.lock)\n\t\treleasem(mp)\n\t\treturn\n\t}\n\t// Since we always have a P, the race in the "No M is available"\n\t// comment in startm doesn\'t apply during the small window between the\n\t// unlock here and lock in startm. A checkdead in between will always\n\t// see at least one running M (ours).\n\tunlock(&amp;sched.lock)\n\n\tstartm(pp, true, false)\n\n\treleasem(mp)\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);