(window.webpackJsonp=window.webpackJsonp||[]).push([[301],{732:function(s,t,a){"use strict";a.r(t);var e=a(34),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"perf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perf"}},[s._v("#")]),s._v(" perf")]),s._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("p",[s._v("perf是linux系统中，用来性能分析、诊断、观测、profile的性能分析工具。")]),s._v(" "),a("ul",[a("li",[s._v("为什么kernel在on-CPU上消耗这么多CPU，什么代码导致的？")]),s._v(" "),a("li",[s._v("导致CPU level 2 cache miss的代码是什么")]),s._v(" "),a("li",[s._v("CPU在memory IO上很慢吗")]),s._v(" "),a("li",[s._v("哪些代码在申请内存？")]),s._v(" "),a("li",[s._v("谁在导致TCP重传？")]),s._v(" "),a("li",[s._v("有哪些kernel function被调用、多频繁？")])]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("h4",{attrs:{id:"centos系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos系统"}},[s._v("#")]),s._v(" centos系统")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y perf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"在mac中启动一个centos容器进行测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在mac中启动一个centos容器进行测试"}},[s._v("#")]),s._v(" 在mac中启动一个centos容器进行测试")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --privileged centos "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器81451f9c2ca8ebcfdae76c76745593461adb4f7b40449a691a5f5809be8a184b换成自己的容器id，通过docker ps可以看到")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 81451f9c2ca8ebcfdae76c76745593461adb4f7b40449a691a5f5809be8a184b /bin/sh\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/mirrorlist/#mirrorlist/g'")]),s._v(" /etc/yum.repos.d/CentOS-Linux-*\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g'")]),s._v(" /etc/yum.repos.d/CentOS-Linux-*\n\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y perf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("p",[s._v("perf命令执行时，默认需要root权限。如果使用时，提示权限不足，则需要修改系统配置")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/sys/kernel/perf_event_paranoid\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用命令格式")]),s._v(" "),a("h3",{attrs:{id:"perf-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perf-list"}},[s._v("#")]),s._v(" perf list")]),s._v(" "),a("p",[s._v("perf list能够展示所有的event type")]),s._v(" "),a("p",[s._v("常用指标说明")]),s._v(" "),a("ul",[a("li",[s._v("instructions:")]),s._v(" "),a("li",[s._v("cycles")]),s._v(" "),a("li",[s._v("cache-misses")]),s._v(" "),a("li",[s._v("dTLB-loads")]),s._v(" "),a("li",[s._v("dTLB-load-misses")]),s._v(" "),a("li",[s._v("dTLB-stores")]),s._v(" "),a("li",[s._v("dTLB-store-misses")]),s._v(" "),a("li",[s._v("L1-dcache-load-misses:")]),s._v(" "),a("li",[s._v("L1-dcache-loads")]),s._v(" "),a("li",[s._v("L1-dcache-stores")]),s._v(" "),a("li",[s._v("L1-icache-store-misses")]),s._v(" "),a("li",[s._v("LLC-load-misses")]),s._v(" "),a("li",[s._v("LLC-loads")]),s._v(" "),a("li",[s._v("LLC-store-misses")]),s._v(" "),a("li",[s._v("LLC-stores")])]),s._v(" "),a("h3",{attrs:{id:"perf-stat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perf-stat"}},[s._v("#")]),s._v(" perf stat")]),s._v(" "),a("p",[s._v("下面命令会每秒统计pid进程的cache-missed,cycles等指标，如果需要其他指标（通过perf list或搜索），可以通过逗号分隔加到后面。")]),s._v(" "),a("p",[s._v("参数可以通过perf stat -h查看")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ perf "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" -h\n\n Usage: perf "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n    -a, --all-cpus        system-wide collection from all CPUs\n    -A, --no-aggr         disable CPU count aggregation\n    -B, --big-num         print large numbers with thousands"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' separators\n    -C, --cpu <cpu>       list of cpus to monitor in system-wide\n    -c, --scale           scale/normalize counters\n    -D, --delay <n>       ms to wait before starting measurement after program start\n    -d, --detailed        detailed run - start a lot of events\n    -e, --event <event>   event selector. use '")]),s._v("perf list' to list available events\n    -G, --cgroup "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   monitor event "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" cgroup name only\n    -g, --group           put the counters into a counter group\n    -I, --interval-print "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                          print counts at regular interval "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ms "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("overhead is possible "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" values "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" 100ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -i, --no-inherit      child tasks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not inherit counters\n    -M, --metrics "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("metric/metric group list"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                          monitor specified metrics or metric "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("groups")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("separated by ,"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -n, --null            null run - dont start any counters\n    -o, --output "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   output "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name\n    -p, --pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" events on existing process "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n    -r, --repeat "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      repeat "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" and print average + stddev "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(", forever: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -S, --sync            call sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" before starting a run\n    -t, --tid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" events on existing thread "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n    -T, --transaction     hardware transaction statistics\n    -v, --verbose         be "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" verbose "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("show counter "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" errors, etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    -x, --field-separator "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("separator"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                          print counts with custom separator\n        --append          append to the output "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n        --filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                          event filter\n        --interval-clear  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" between new interval\n        --interval-count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                          print counts "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" fixed number of "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("times")]),s._v("\n        --log-fd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      log output to fd, instead of stderr\n        --metric-only     Only print computed metrics. No raw values\n        --no-merge        Do not merge identical named events\n        --per-core        aggregate counts per physical processor core\n        --per-socket      aggregate counts per processor socket\n        --per-thread      aggregate counts per thread\n        --post "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" to run after to the measured "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n        --pre "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" to run prior to the measured "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n        --smi-cost        measure SMI cost\n        --table           display details about each run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("only with -r option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        --timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     stop workload and print counts after a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" period "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ms "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" 10ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        --topdown         measure topdown level "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" statistics\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pid换成自己的进程id")]),s._v("\nperf "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" -e instructions,cache-misses,cycles,dTLB-loads,dTLB-load-misses,L1-dcache-load-misses,L1-dcache-loads,LLC-load-misses,LLC-loads -a -p pid -I "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"perf-top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perf-top"}},[s._v("#")]),s._v(" perf top")]),s._v(" "),a("p",[s._v("perf top -a")]),s._v(" "),a("p",[s._v("perf和async-profiler")]),s._v(" "),a("h3",{attrs:{id:"perf查看cpu栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perf查看cpu栈"}},[s._v("#")]),s._v(" perf查看cpu栈")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")])])}),[],!1,null,null,null);t.default=n.exports}}]);