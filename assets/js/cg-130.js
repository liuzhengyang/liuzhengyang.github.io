(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{561:function(t,s,a){"use strict";a.r(s);var n=a(34),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rate-limiter关于限速器所需要了解的知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rate-limiter关于限速器所需要了解的知识"}},[t._v("#")]),t._v(" rate limiter关于限速器所需要了解的知识")]),t._v(" "),a("p",[t._v("RateLimiter速率限流限速保护器是保证服务稳定性的一种重要手段，其他的稳定性保护手段还有熔断、并发限流等。\n比如我们的一个机器能够支持的最大的接口请求量为1000每秒，为了避免请求量过高导致服务请求积压，服务处理速度变慢最终无法对外响应。可以在服务的入口处增加\n一个限流保护器，当请求的QPS超过我们配置的值时，会直接抛出异常，避免增加请求压力超过自身处理能力。\n另外加入我们的服务要调用另外一个被调服务，该被调服务也有处理能力的速度上限，则我们也可以在调用这个被调服务时增加限流保护，避免超载。\n比如我们在开发一个数据迁移导入功能，把一批数据导入到新的数据库，导入程序通过增加限流，控制每秒导入的最大数据量，避免数据库超载。")]),t._v(" "),a("p",[t._v("本文内容")]),t._v(" "),a("ul",[a("li",[t._v("限流的实现\n"),a("ul",[a("li",[t._v("简单限流、guava限流。")])])]),t._v(" "),a("li",[t._v("限流的用途")]),t._v(" "),a("li",[t._v("单机限流、分布式限流\n"),a("ul",[a("li",[t._v("redis、批量")])])])]),t._v(" "),a("h2",{attrs:{id:"实现一个简单的rate-limiter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个简单的rate-limiter"}},[t._v("#")]),t._v(" 实现一个简单的rate limiter")]),t._v(" "),a("p",[t._v("现在假设限流器每秒允许执行N个操作，一种直观的实现是控制每次操作间的间隔超过1/N秒，因此一个RateLimiter\n只需要记录上次允许操作的时间即可。每次acquire时，判断距离上次允许操作的时间，是否超过了最小间隔，如果是\n则允许通过并且更新操作时间，否则等待到指定的时间再判断。")]),t._v(" "),a("p",[t._v("如下代码使用kotlin实现了acquire和tryAcquire功能。tryAcquire类似Lock里的tryLock，会判断当前是否能acquire，如果不能直接返回不等待。\n否则会通过限流器。acquire方法在不能通过的情况下会等待重试。")]),t._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RateLimiter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ratePerSecond"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intervalMillis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Long"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@Volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lastTimeMillis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Long "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        intervalMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimeUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" ratePerSecond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" sleepMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastTimeMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" intervalMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleepMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleepMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Boolean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastTimeMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" intervalMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lastTimeMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" intervalMillis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    lastTimeMillis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("h2",{attrs:{id:"guava-rate-limiter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guava-rate-limiter"}},[t._v("#")]),t._v(" guava rate limiter")]),t._v(" "),a("p",[t._v("我们上面实现的限速器的优点是实现简单，\nguava中的RateLimiter，增加了更多的设计考虑，针对RateLimiter一段时间没有请求的情况，\nRateLimiter会积累一个storedPermits的值，在有请求来了之后就直接允许storedPermits个请求通过，而不需要等待，\n这是针对类似空闲资源的更有限方式，比如带宽。\n另外常听说的限流实现还有令牌桶、漏桶等。")]),t._v(" "),a("h2",{attrs:{id:"分布式限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式限流"}},[t._v("#")]),t._v(" 分布式限流")]),t._v(" "),a("p",[t._v("前面提到的限流都是一个Java进程内的限流，而有时我们的分布式微服务会有多个实例，那么如何实现分布式的限流呢？")]),t._v(" "),a("p",[t._v("第一个方案，假如我们已知服务实例的数量，则可以按照整体限流值除以实例数量的方式为每个进程计算限流值")]),t._v(" "),a("p",[t._v("第二个方案，通过redis的incr实现，比如为每一秒作为一个redis的key设置一定的过期时间，然后每次acquire时都去incr，判断返回的结果是否超过限流值。\n这种方式在请求量比较高时，会产生比较高的redis请求量，如果使用单个key，则单个key都请求到同一个redis实例，则会有热点问题，可以通过将key拆分成\n多个子key（比如通过机器名hash的方式），再拆分到多个子key上，降低单个redis的压力。还可以通过聚合的方式请求，比如每次incr的增量不是1，而是\n100，获取完100个permit后，可以在进程内acquire成功100次，从而能极大降低redis的请求量。在超过阈值后还能保存一个本地缓存避免同时间粒度内再次请求redis继续降低请求量。")]),t._v(" "),a("p",[t._v("分布式限流还可以使用sentinel的"),a("a",{attrs:{href:"https://sentinelguard.io/zh-cn/docs/cluster-flow-control.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("集群流控规则"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"限流的速率动态调整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限流的速率动态调整"}},[t._v("#")]),t._v(" 限流的速率动态调整")]),t._v(" "),a("p",[t._v("有时候我们的限速器的配置希望能动态调整，比如服务下游出现问题，希望我们把调用量调小。\n有时候我们发现服务能够支持的调用量比预估的要高，希望调大限流值。\n这种需要调整限速值的情况，如果还需要修改代码重新部署，就非常不方便。那么如何实现一个能动态调整的限速器呢？")]),t._v(" "),a("p",[t._v("对于前面的简单间隔限速器和分布式redis限速器，实现比较简单，只需要在配置值变化之后调整对应的最小间隔时间和redis incr结果的最大值即可。\n对于guava的RateLimiter，稍微麻烦点，需要我们把RateLimiter封装到一个封装类中，这个封装类中维护一个guava RateLimiter对象，当限流值变化时，\n创建一个新的RateLimiter对象并替换，调用acquire时从封装类获取最新的RateLimiter进行acquire。")]),t._v(" "),a("h2",{attrs:{id:"分布式频次限制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式频次限制器"}},[t._v("#")]),t._v(" 分布式频次限制器")]),t._v(" "),a("p",[t._v("另外一种常见的需求是频次限制，类似限速器，但是要求更精准，比如为了防止接口被刷，业务上要求限制一个用户一天只能修改一次用户名，那么在修改用户名前\n就要判断今天修改了几次。类似这种需求可以通过频次限制实现。")]),t._v(" "),a("p",[t._v("在redis中保存次数，每次获取频次时，incr并获取该key的ttl（即剩余过期时间），如果过期时间没有设置，则通过expire设置过期时间（频次限制的周期比如一天）。\n如果incr返回的值超过阈值，说明超过次数限制。")])])}),[],!1,null,null,null);s.default=e.exports}}]);