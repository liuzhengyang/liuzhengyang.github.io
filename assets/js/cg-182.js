(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{613:function(t,a,r){"use strict";r.r(a);var e=r(34),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"jmc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jmc"}},[t._v("#")]),t._v(" JMC")]),t._v(" "),r("p",[t._v("JMC全称Java Mission Control（直译是Java指挥中心）是oracle jdk提供的非常强大的jvm工具，\n提供了监控、诊断等强大能力，jdk自己提供的工具，功能当然更加强大，因为可以自己在jdk代码中加入需要的接口、监控埋点等，比如\njvm内部通过JFR(Java Flight Recorder)采集了非常详细的运行时数据， 能够通过JMC进行实时或离线的监控、分析、性能优化。")]),t._v(" "),r("p",[t._v("JMC目前使用上分为两部分。\n一个是JMX Console，是实时得采集展示目标进程通过JMX接口返回的信息，比如GC次数耗时、CPU使用率以及各类框架\n通过自定义JMX MBean扩展的信息。\n另一个是Java Flight Recorder(简称JFR)，类似飞机上的黑匣子，能够记录JVM内部运行时的非常详细的数据（比如gc的详细过程、tlab信息、方法profile数据等等），\n目前JFR可以动态采集（采集一段时间或持续采集），然后通过JMC进行离线分析，不过我认为可以实现成实时分析会更方便。")]),t._v(" "),r("h2",{attrs:{id:"jfr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jfr"}},[t._v("#")]),t._v(" JFR")]),t._v(" "),r("p",[t._v("JFR的数据收集")])])}),[],!1,null,null,null);a.default=n.exports}}]);