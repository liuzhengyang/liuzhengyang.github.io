(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{627:function(t,l,e){"use strict";e.r(l);var n=e(34),i=Object(n.a)({},(function(){var t=this,l=t.$createElement,e=t._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"implicit-null-check"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implicit-null-check"}},[t._v("#")]),t._v(" implicit-null-check")]),t._v(" "),e("p",[t._v("我们都知道在Java中，如果一个引用是null，对它的字段访问、方法调用都会抛出NullPointerException。\n那么NullPointerException是如何实现的，在每次字段访问方法调用时都进行null检查吗？")]),t._v(" "),e("p",[t._v("hotspot JVM中并没有这样做，而是使用了implicit null check的机制，是基于一个优化假设，即绝大部分\n要访问字段、调用方法的目标对象不是null，在发生null异常（会抛出SIGSEGV信号）时再拦截兜底处理。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://shipilev.net/jvm/anatomy-quarks/25-implicit-null-checks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JVM Anatomy Quark #25: Implicit Null Checks"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);l.default=i.exports}}]);